function ::= "function" qualifier "(" hex? ")" "{" ("call" qualifier ";" | "set" (field | ((field ",")+ field)) ";")+ "}"
qualifier ::= (char | digit | "_")+
field ::= qualifier [(] parameter [)] [,]
parameter ::= qualifier "." qualifier | "CONST(" number ")"
lc_char ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"
uc_char ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"
char ::= lc_char | uc_char
digit ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
number ::= digit+
hex ::= "0x" digit digit
single_def ::= "single" qualifier "=" "{" number "}" ";"
field_def ::= "field" qualifier "=" "{" number "," number "}" "{" (field | ((field ",")+ field)) "}" "{" (number | ((number ",")+ number)) "}" ";"
file ::= (char ":/")? (qualifier | ((qualifier "/")+ qualifier)) "." char+
import ::= "import" file